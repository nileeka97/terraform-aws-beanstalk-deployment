name: Terraform Deployment

env:
  # Configure the following environment variables
  PROJECT_NAME: "demo-project" # Name of the project; append environment (dev, stag, or prod)
  ENV: "dev"
  AWS_REGION: "ap-south-1"
  VPC_CIDR_BLOCK: "10.0.0.0/16" # CIDR block for the Virtual Private Cloud (VPC)
  PUBLIC_SUBNET_1_CIDR_BLOCK: "10.0.1.0/24"
  PUBLIC_SUBNET_1_AVAIL_ZONE: "ap-south-1a"
  INSTANCE_TYPE: "t2.micro" # Define the instance type (e.g., t2.micro, m5.large)
  STACK_NAME: "64bit Amazon Linux 2023 v4.0.6 running Python 3.9"
  EC2_KEY_NAME: "demo-project-dev-kp2" # Name of the key pair created manually
  USE_AWS_S3: "true"
  AWS_STORAGE_BUCKET_NAME: "lk-ixd-attendance-system-dev-media"
  AWS_S3_REGION_NAME: "us-east-1"
  DJANGO_ALLOWED_HOSTS: "*"
  DJANGO_SETTINGS_MODULE: "config.settings"
  DATABASE_URL: "sacsacsdvc"
  AWS_S3_ACCESS_KEY_ID: "sfsvsdvsv"
  AWS_S3_SECRET_ACCESS_KEY: "dcsfdfvdscvf"
  


on:
  push:
    branches:
      - master

jobs:
    terraform-build:
      runs-on: ubuntu-latest
    
      steps:
        - name: Checkout Repository
          uses: actions/checkout@v2

        - name: Set up Terraform
          uses: hashicorp/setup-terraform@v1

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ${{ env.AWS_REGION }}
          
        - name: Initialize Terraform
          run: terraform init

        - name: Apply Terraform Configuration
          run: |
            terraform apply -auto-approve \
              -var "project_name=${{ env.PROJECT_NAME }}" \
              -var "env=${{ env.ENV }}" \
              -var "vpc_cidr_block=${{ env.VPC_CIDR_BLOCK }}" \
              -var "public_subnet_1_cidr_block=${{ env.PUBLIC_SUBNET_1_CIDR_BLOCK }}" \
              -var "public_subnet_1_avail_zone=${{ env.PUBLIC_SUBNET_1_AVAIL_ZONE }}" \
              -var "instance_type=${{ env.INSTANCE_TYPE }}" \
              -var "stack_name=${{ env.STACK_NAME }}" \
              -var "ec2_keypair=${{ env.EC2_KEY_NAME }}" 
              -var "DATABASE_URL=${{ env.DATABASE_URL }}" \
              -var "USE_AWS_S3=${{ env.USE_AWS_S3 }}" \
              -var "AWS_S3_ACCESS_KEY_ID=${{ env.AWS_S3_ACCESS_KEY_ID }}" \
              -var "AWS_S3_SECRET_ACCESS_KEY=${{ env.AWS_S3_SECRET_ACCESS_KEY }}" \
              -var "AWS_STORAGE_BUCKET_NAME=${{ env.AWS_STORAGE_BUCKET_NAME }}" \
              -var "AWS_S3_REGION_NAME=${{ env.AWS_S3_REGION_NAME }}" \
              -var "DJANGO_ALLOWED_HOSTS=${{ env.DJANGO_ALLOWED_HOSTS }}" \
              -var "DJANGO_SETTINGS_MODULE=${{ env.DJANGO_SETTINGS_MODULE }}" 
